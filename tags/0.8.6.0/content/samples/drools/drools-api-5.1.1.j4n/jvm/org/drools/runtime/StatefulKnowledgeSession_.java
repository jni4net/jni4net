// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package org.drools.runtime;

@net.sf.jni4net.attributes.ClrTypeInfo
public final class StatefulKnowledgeSession_ {
    
    //<generated-static>
    private static system.Type staticType;
    
    public static system.Type typeof() {
        return org.drools.runtime.StatefulKnowledgeSession_.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        org.drools.runtime.StatefulKnowledgeSession_.staticType = staticType;
    }
    //</generated-static>
}

//<generated-proxy>
@net.sf.jni4net.attributes.ClrProxy
class __StatefulKnowledgeSession extends system.Object implements org.drools.runtime.StatefulKnowledgeSession {
    
    protected __StatefulKnowledgeSession(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("(I)I")
    public native int fireAllRules(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/runtime/rule/AgendaFilter;)I")
    public native int fireAllRules(org.drools.runtime.rule.AgendaFilter par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()I")
    public native int fireAllRules();
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/runtime/rule/AgendaFilter;)V")
    public native void fireUntilHalt(org.drools.runtime.rule.AgendaFilter par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    public native void fireUntilHalt();
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/command/Command;)Ljava/lang/Object;")
    public native java.lang.Object execute(org.drools.command.Command par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/runtime/rule/FactHandle;)Ljava/lang/Object;")
    public native java.lang.Object getObject(org.drools.runtime.rule.FactHandle par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/Object;)Lorg/drools/runtime/rule/FactHandle;")
    public native org.drools.runtime.rule.FactHandle insert(java.lang.Object par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/runtime/rule/FactHandle;Ljava/lang/Object;)V")
    public native void update(org.drools.runtime.rule.FactHandle par0, java.lang.Object par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/Object;)Lorg/drools/runtime/rule/FactHandle;")
    public native org.drools.runtime.rule.FactHandle getFactHandle(java.lang.Object par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/lang/String;")
    public native java.lang.String getEntryPointId();
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/runtime/rule/FactHandle;)V")
    public native void retract(org.drools.runtime.rule.FactHandle par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/runtime/ObjectFilter;)Ljava/util/Collection;")
    public native java.util.Collection getObjects(org.drools.runtime.ObjectFilter par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Collection;")
    public native java.util.Collection getObjects();
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/runtime/ObjectFilter;)Ljava/util/Collection;")
    public native java.util.Collection getFactHandles(org.drools.runtime.ObjectFilter par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Collection;")
    public native java.util.Collection getFactHandles();
    
    @net.sf.jni4net.attributes.ClrMethod("()J")
    public native long getFactCount();
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    public native void halt();
    
    @net.sf.jni4net.attributes.ClrMethod("()Lorg/drools/runtime/rule/Agenda;")
    public native org.drools.runtime.rule.Agenda getAgenda();
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;)Lorg/drools/runtime/rule/WorkingMemoryEntryPoint;")
    public native org.drools.runtime.rule.WorkingMemoryEntryPoint getWorkingMemoryEntryPoint(java.lang.String par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Collection;")
    public native java.util.Collection getWorkingMemoryEntryPoints();
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;[Ljava/lang/Object;)Lorg/drools/runtime/rule/QueryResults;")
    public native org.drools.runtime.rule.QueryResults getQueryResults(java.lang.String par0, java.lang.Object[] par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;)Lorg/drools/runtime/rule/QueryResults;")
    public native org.drools.runtime.rule.QueryResults getQueryResults(java.lang.String par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;[Ljava/lang/Object;Lorg/drools/runtime/rule/ViewChangedEventListener;)Lorg/drools/runtime/rule/LiveQuery;")
    public native org.drools.runtime.rule.LiveQuery openLiveQuery(java.lang.String par0, java.lang.Object[] par1, org.drools.runtime.rule.ViewChangedEventListener par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/util/Map;)Lorg/drools/runtime/process/ProcessInstance;")
    public native org.drools.runtime.process.ProcessInstance startProcess(java.lang.String par0, java.util.Map par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;)Lorg/drools/runtime/process/ProcessInstance;")
    public native org.drools.runtime.process.ProcessInstance startProcess(java.lang.String par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/lang/Object;J)V")
    public native void signalEvent(java.lang.String par0, java.lang.Object par1, long par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/lang/Object;)V")
    public native void signalEvent(java.lang.String par0, java.lang.Object par1);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Collection;")
    public native java.util.Collection getProcessInstances();
    
    @net.sf.jni4net.attributes.ClrMethod("(J)Lorg/drools/runtime/process/ProcessInstance;")
    public native org.drools.runtime.process.ProcessInstance getProcessInstance(long par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(J)V")
    public native void abortProcessInstance(long par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Lorg/drools/runtime/process/WorkItemManager;")
    public native org.drools.runtime.process.WorkItemManager getWorkItemManager();
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/event/rule/AgendaEventListener;)V")
    public native void addEventListener(org.drools.event.rule.AgendaEventListener par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/event/rule/WorkingMemoryEventListener;)V")
    public native void addEventListener(org.drools.event.rule.WorkingMemoryEventListener par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/event/rule/AgendaEventListener;)V")
    public native void removeEventListener(org.drools.event.rule.AgendaEventListener par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/event/rule/WorkingMemoryEventListener;)V")
    public native void removeEventListener(org.drools.event.rule.WorkingMemoryEventListener par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Collection;")
    public native java.util.Collection getWorkingMemoryEventListeners();
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Collection;")
    public native java.util.Collection getAgendaEventListeners();
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/event/process/ProcessEventListener;)V")
    public native void addEventListener(org.drools.event.process.ProcessEventListener par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lorg/drools/event/process/ProcessEventListener;)V")
    public native void removeEventListener(org.drools.event.process.ProcessEventListener par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Collection;")
    public native java.util.Collection getProcessEventListeners();
    
    @net.sf.jni4net.attributes.ClrMethod("()Lorg/drools/time/SessionClock;")
    public native org.drools.time.SessionClock getSessionClock();
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/lang/Object;)V")
    public native void setGlobal(java.lang.String par0, java.lang.Object par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;)Ljava/lang/Object;")
    public native java.lang.Object getGlobal(java.lang.String par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Lorg/drools/runtime/Globals;")
    public native org.drools.runtime.Globals getGlobals();
    
    @net.sf.jni4net.attributes.ClrMethod("()Lorg/drools/runtime/Calendars;")
    public native org.drools.runtime.Calendars getCalendars();
    
    @net.sf.jni4net.attributes.ClrMethod("()Lorg/drools/runtime/Environment;")
    public native org.drools.runtime.Environment getEnvironment();
    
    @net.sf.jni4net.attributes.ClrMethod("()Lorg/drools/KnowledgeBase;")
    public native org.drools.KnowledgeBase getKnowledgeBase();
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Lorg/drools/runtime/ExitPoint;)V")
    public native void registerExitPoint(java.lang.String par0, org.drools.runtime.ExitPoint par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;)V")
    public native void unregisterExitPoint(java.lang.String par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Lorg/drools/runtime/Channel;)V")
    public native void registerChannel(java.lang.String par0, org.drools.runtime.Channel par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;)V")
    public native void unregisterChannel(java.lang.String par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()Ljava/util/Map;")
    public native java.util.Map getChannels();
    
    @net.sf.jni4net.attributes.ClrMethod("()I")
    public native int getId();
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    public native void dispose();
}
//</generated-proxy>
