// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package system;

@net.sf.jni4net.attributes.ClrType
public class Environment extends system.Object {
    
    //<generated-proxy>
    private static system.Type staticType;
    
    protected Environment(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    protected Environment() {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("()I")
    public native static int getTickCount();
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native static void Exit(int exitCode);
    
    @net.sf.jni4net.attributes.ClrMethod("()I")
    public native static int getExitCode();
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native static void setExitCode(int value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
    public native static void FailFast(java.lang.String message);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getCommandLine();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getCurrentDirectory();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
    public native static void setCurrentDirectory(java.lang.String value);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getSystemDirectory();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)LSystem/String;")
    public native static java.lang.String ExpandEnvironmentVariables(java.lang.String name);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getMachineName();
    
    @net.sf.jni4net.attributes.ClrMethod("()I")
    public native static int getProcessorCount();
    
    @net.sf.jni4net.attributes.ClrMethod("()[LSystem/String;")
    public native static java.lang.String[] GetCommandLineArgs();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)LSystem/String;")
    public native static java.lang.String GetEnvironmentVariable(java.lang.String variable);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/EnvironmentVariableTarget;)LSystem/String;")
    public native static java.lang.String GetEnvironmentVariable(java.lang.String variable, system.Enum target);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Collections/IDictionary;")
    public native static system.collections.IDictionary GetEnvironmentVariables();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/EnvironmentVariableTarget;)LSystem/Collections/IDictionary;")
    public native static system.collections.IDictionary GetEnvironmentVariables(system.Enum target);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;)V")
    public native static void SetEnvironmentVariable(java.lang.String variable, java.lang.String value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;LSystem/EnvironmentVariableTarget;)V")
    public native static void SetEnvironmentVariable(java.lang.String variable, java.lang.String value, system.Enum target);
    
    @net.sf.jni4net.attributes.ClrMethod("()[LSystem/String;")
    public native static java.lang.String[] GetLogicalDrives();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getNewLine();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Version;")
    public native static system.Object getVersion();
    
    @net.sf.jni4net.attributes.ClrMethod("()J")
    public native static long getWorkingSet();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/OperatingSystem;")
    public native static system.Object getOSVersion();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getStackTrace();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native static boolean getHasShutdownStarted();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getUserName();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native static boolean getUserInteractive();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Environment+SpecialFolder;)LSystem/String;")
    public native static java.lang.String GetFolderPath(system.Enum folder);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native static java.lang.String getUserDomainName();
    
    public static system.Type typeof() {
        return system.Environment.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        system.Environment.staticType = staticType;
    }
    //</generated-proxy>
}
