//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Reflection {
    
    
    #region Component Designer generated code 
    public partial class PropertyInfo_ {
        
        public new static global::java.lang.Class _class {
            get {
                return global::System.Reflection.@__PropertyInfo.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute()]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::System.Reflection.PropertyInfo))]
    internal sealed partial class @__PropertyInfo : global::java.lang.Object {
        
        internal static global::java.lang.Class staticClass;
        
        protected @__PropertyInfo(global::net.sf.jni4net.jni.JNIEnv env) : 
                base(env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv env, java.lang.Class staticClass) {
            global::System.Reflection.@__PropertyInfo.staticClass = staticClass;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv env, global::java.lang.Class clazz) {
            global::System.Type type = typeof(__PropertyInfo);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetConstantValue", "GetConstantValue0", "()Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetRawConstantValue", "GetRawConstantValue1", "()Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getPropertyType", "PropertyType2", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "SetValue", "SetValue3", "(Lsystem/Object;Lsystem/Object;Lsystem/reflection/BindingFlags;Ljava/lang/Object;" +
                        "[Lsystem/Object;Lsystem/ICloneable;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetAccessors", "GetAccessors4", "(Z)[Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetGetMethod", "GetGetMethod5", "(Z)Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetSetMethod", "GetSetMethod6", "(Z)Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetIndexParameters", "GetIndexParameters7", "()[Lsystem/reflection/ParameterInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getAttributes", "Attributes8", "()Lsystem/Enum;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getCanRead", "CanRead9", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getCanWrite", "CanWrite10", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetValue", "GetValue11", "(Lsystem/Object;[Lsystem/Object;)Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetValue", "GetValue12", "(Lsystem/Object;Lsystem/reflection/BindingFlags;Ljava/lang/Object;[Lsystem/Object" +
                        ";Lsystem/ICloneable;)Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "SetValue", "SetValue13", "(Lsystem/Object;Lsystem/Object;[Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetRequiredCustomModifiers", "GetRequiredCustomModifiers14", "()[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetOptionalCustomModifiers", "GetOptionalCustomModifiers15", "()[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetAccessors", "GetAccessors16", "()[Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetGetMethod", "GetGetMethod17", "()Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetSetMethod", "GetSetMethod18", "()Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isSpecialName", "IsSpecialName19", "()Z"));
            return methods;
        }
        
        private static global::System.IntPtr GetConstantValue0(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Lsystem/Object;
            // ()LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetConstantValue());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetRawConstantValue1(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Lsystem/Object;
            // ()LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetRawConstantValue());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr PropertyType2(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.PropertyType);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static void SetValue3(global::System.IntPtr @__envi, global::System.IntPtr @__obj, global::System.IntPtr obj, global::System.IntPtr value, global::System.IntPtr invokeAttr, global::System.IntPtr binder, global::System.IntPtr index, global::System.IntPtr culture) {
            // (Lsystem/Object;Lsystem/Object;Lsystem/reflection/BindingFlags;Ljava/lang/Object;[Lsystem/Object;Lsystem/ICloneable;)V
            // (LSystem/Object;LSystem/Object;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;[LSystem/Object;LSystem/Globalization/CultureInfo;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            real.SetValue(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, obj), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, value), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, invokeAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, index), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Globalization.CultureInfo>(__env, culture));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static global::System.IntPtr GetAccessors4(global::System.IntPtr @__envi, global::System.IntPtr @__obj, bool nonPublic) {
            // (Z)[Lsystem/reflection/MethodInfo;
            // (Z)[LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetAccessors(nonPublic));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetGetMethod5(global::System.IntPtr @__envi, global::System.IntPtr @__obj, bool nonPublic) {
            // (Z)Lsystem/reflection/MethodInfo;
            // (Z)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetGetMethod(nonPublic));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetSetMethod6(global::System.IntPtr @__envi, global::System.IntPtr @__obj, bool nonPublic) {
            // (Z)Lsystem/reflection/MethodInfo;
            // (Z)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetSetMethod(nonPublic));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetIndexParameters7(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()[Lsystem/reflection/ParameterInfo;
            // ()[LSystem/Reflection/ParameterInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetIndexParameters());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr Attributes8(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Lsystem/Enum;
            // ()LSystem/Reflection/PropertyAttributes;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.Attributes);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static bool CanRead9(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return real.CanRead;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool CanWrite10(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return real.CanWrite;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::System.IntPtr GetValue11(global::System.IntPtr @__envi, global::System.IntPtr @__obj, global::System.IntPtr obj, global::System.IntPtr index) {
            // (Lsystem/Object;[Lsystem/Object;)Lsystem/Object;
            // (LSystem/Object;[LSystem/Object;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetValue(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, obj), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, index)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetValue12(global::System.IntPtr @__envi, global::System.IntPtr @__obj, global::System.IntPtr obj, global::System.IntPtr invokeAttr, global::System.IntPtr binder, global::System.IntPtr index, global::System.IntPtr culture) {
            // (Lsystem/Object;Lsystem/reflection/BindingFlags;Ljava/lang/Object;[Lsystem/Object;Lsystem/ICloneable;)Lsystem/Object;
            // (LSystem/Object;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;[LSystem/Object;LSystem/Globalization/CultureInfo;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetValue(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, obj), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, invokeAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, index), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Globalization.CultureInfo>(__env, culture)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static void SetValue13(global::System.IntPtr @__envi, global::System.IntPtr @__obj, global::System.IntPtr obj, global::System.IntPtr value, global::System.IntPtr index) {
            // (Lsystem/Object;Lsystem/Object;[Lsystem/Object;)V
            // (LSystem/Object;LSystem/Object;[LSystem/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            real.SetValue(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, obj), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, value), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, index));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static global::System.IntPtr GetRequiredCustomModifiers14(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()[Lsystem/Type;
            // ()[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetRequiredCustomModifiers());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetOptionalCustomModifiers15(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()[Lsystem/Type;
            // ()[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetOptionalCustomModifiers());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetAccessors16(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()[Lsystem/reflection/MethodInfo;
            // ()[LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetAccessors());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetGetMethod17(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Lsystem/reflection/MethodInfo;
            // ()LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetGetMethod());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetSetMethod18(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Lsystem/reflection/MethodInfo;
            // ()LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetSetMethod());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static bool IsSpecialName19(global::System.IntPtr @__envi, global::System.IntPtr @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::System.Reflection.PropertyInfo real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.PropertyInfo>(__env, @__obj);
            return real.IsSpecialName;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJavaProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv env) {
                return new global::System.Reflection.@__PropertyInfo(env);
            }
        }
    }
    #endregion
}
