//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System {
    
    
    #region Component Designer generated code 
    public unsafe partial class Type_ {
        
        public new static global::java.lang.Class _class {
            get {
                return global::System.@__Type.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute()]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::System.Type))]
    internal unsafe partial class @__Type : global::java.lang.Object {
        
        internal static global::java.lang.Class staticClass;
        
        protected @__Type(global::net.sf.jni4net.jni.JNIEnv env) : 
                base(env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv env, java.lang.Class staticClass) {
            global::System.@__Type.staticClass = staticClass;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv env, global::java.lang.Class clazz) {
            global::System.Type type = typeof(__Type);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getDeclaringMethod", "DeclaringMethod0", "()Lsystem/reflection/MethodBase;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetType", "GetType1", "(Ljava/lang/String;ZZ)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetType", "GetType2", "(Ljava/lang/String;Z)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetType", "GetType3", "(Ljava/lang/String;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "ReflectionOnlyGetType", "ReflectionOnlyGetType4", "(Ljava/lang/String;ZZ)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "MakePointerType", "MakePointerType5", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getStructLayoutAttribute", "StructLayoutAttribute6", "()Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "MakeByRefType", "MakeByRefType7", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "MakeArrayType", "MakeArrayType8", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "MakeArrayType", "MakeArrayType9", "(I)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromProgID", "GetTypeFromProgID10", "(Ljava/lang/String;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromProgID", "GetTypeFromProgID11", "(Ljava/lang/String;Z)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromProgID", "GetTypeFromProgID12", "(Ljava/lang/String;Ljava/lang/String;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromProgID", "GetTypeFromProgID13", "(Ljava/lang/String;Ljava/lang/String;Z)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromCLSID", "GetTypeFromCLSID14", "(Lsystem/Guid;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromCLSID", "GetTypeFromCLSID15", "(Lsystem/Guid;Z)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromCLSID", "GetTypeFromCLSID16", "(Lsystem/Guid;Ljava/lang/String;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromCLSID", "GetTypeFromCLSID17", "(Lsystem/Guid;Ljava/lang/String;Z)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeCode", "GetTypeCode18", "(Lsystem/Type;)Lsystem/Enum;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getGUID", "GUID19", "()Lsystem/Guid;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getDefaultBinder", "DefaultBinder20", "()Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "InvokeMember", "InvokeMember21", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Obje" +
                        "ct;[Lsystem/Object;[Lsystem/ValueType;Lsystem/ICloneable;[Lsystem/String;)Lsyste" +
                        "m/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "InvokeMember", "InvokeMember22", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Obje" +
                        "ct;[Lsystem/Object;Lsystem/ICloneable;)Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "InvokeMember", "InvokeMember23", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Obje" +
                        "ct;[Lsystem/Object;)Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getAssembly", "Assembly24", "()Lsystem/reflection/Assembly;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getTypeHandle", "TypeHandle25", "()Lsystem/ValueType;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeHandle", "GetTypeHandle26", "(Lsystem/Object;)Lsystem/ValueType;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeFromHandle", "GetTypeFromHandle27", "(Lsystem/ValueType;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getFullName", "FullName28", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getNamespace", "Namespace29", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getAssemblyQualifiedName", "AssemblyQualifiedName30", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetArrayRank", "GetArrayRank31", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getBaseType", "BaseType32", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetConstructor", "GetConstructor33", "(Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Enum;[Lsystem/Type;[Ls" +
                        "ystem/ValueType;)Lsystem/reflection/ConstructorInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetConstructor", "GetConstructor34", "(Lsystem/reflection/BindingFlags;Ljava/lang/Object;[Lsystem/Type;[Lsystem/ValueTy" +
                        "pe;)Lsystem/reflection/ConstructorInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetConstructor", "GetConstructor35", "([Lsystem/Type;)Lsystem/reflection/ConstructorInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetConstructors", "GetConstructors36", "()[Lsystem/reflection/ConstructorInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetConstructors", "GetConstructors37", "(Lsystem/reflection/BindingFlags;)[Lsystem/reflection/ConstructorInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getTypeInitializer", "TypeInitializer38", "()Lsystem/reflection/ConstructorInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethod", "GetMethod39", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Enum" +
                        ";[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethod", "GetMethod40", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;[Lsystem/Typ" +
                        "e;[Lsystem/ValueType;)Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethod", "GetMethod41", "(Ljava/lang/String;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/MethodInf" +
                        "o;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethod", "GetMethod42", "(Ljava/lang/String;[Lsystem/Type;)Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethod", "GetMethod43", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/MethodInfo" +
                        ";"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethod", "GetMethod44", "(Ljava/lang/String;)Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethods", "GetMethods45", "()[Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMethods", "GetMethods46", "(Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MethodInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetField", "GetField47", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/FieldInfo;" +
                        ""));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetField", "GetField48", "(Ljava/lang/String;)Lsystem/reflection/FieldInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetFields", "GetFields49", "()[Lsystem/reflection/FieldInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetFields", "GetFields50", "(Lsystem/reflection/BindingFlags;)[Lsystem/reflection/FieldInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetInterface", "GetInterface51", "(Ljava/lang/String;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetInterface", "GetInterface52", "(Ljava/lang/String;Z)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetInterfaces", "GetInterfaces53", "()[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetEvent", "GetEvent54", "(Ljava/lang/String;)Lsystem/reflection/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetEvent", "GetEvent55", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/MemberInfo" +
                        ";"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetEvents", "GetEvents56", "()[Lsystem/reflection/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetEvents", "GetEvents57", "(Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperty", "GetProperty58", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Type" +
                        ";[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperty", "GetProperty59", "(Ljava/lang/String;Lsystem/Type;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflect" +
                        "ion/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperty", "GetProperty60", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/PropertyIn" +
                        "fo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperty", "GetProperty61", "(Ljava/lang/String;Lsystem/Type;[Lsystem/Type;)Lsystem/reflection/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperty", "GetProperty62", "(Ljava/lang/String;[Lsystem/Type;)Lsystem/reflection/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperty", "GetProperty63", "(Ljava/lang/String;Lsystem/Type;)Lsystem/reflection/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperty", "GetProperty64", "(Ljava/lang/String;)Lsystem/reflection/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperties", "GetProperties65", "(Lsystem/reflection/BindingFlags;)[Lsystem/reflection/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetProperties", "GetProperties66", "()[Lsystem/reflection/PropertyInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetNestedTypes", "GetNestedTypes67", "()[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetNestedTypes", "GetNestedTypes68", "(Lsystem/reflection/BindingFlags;)[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetNestedType", "GetNestedType69", "(Ljava/lang/String;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetNestedType", "GetNestedType70", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMember", "GetMember71", "(Ljava/lang/String;)[Lsystem/reflection/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMember", "GetMember72", "(Ljava/lang/String;Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MemberInf" +
                        "o;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMember", "GetMember73", "(Ljava/lang/String;Lsystem/Enum;Lsystem/reflection/BindingFlags;)[Lsystem/reflect" +
                        "ion/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMembers", "GetMembers74", "()[Lsystem/reflection/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetMembers", "GetMembers75", "(Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetDefaultMembers", "GetDefaultMembers76", "()[Lsystem/reflection/MemberInfo;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNested", "IsNested77", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getAttributes", "Attributes78", "()Lsystem/Enum;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getGenericParameterAttributes", "GenericParameterAttributes79", "()Lsystem/Enum;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isVisible", "IsVisible80", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNotPublic", "IsNotPublic81", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isPublic", "IsPublic82", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNestedPublic", "IsNestedPublic83", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNestedPrivate", "IsNestedPrivate84", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNestedFamily", "IsNestedFamily85", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNestedAssembly", "IsNestedAssembly86", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNestedFamANDAssem", "IsNestedFamANDAssem87", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isNestedFamORAssem", "IsNestedFamORAssem88", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isAutoLayout", "IsAutoLayout89", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isLayoutSequential", "IsLayoutSequential90", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isExplicitLayout", "IsExplicitLayout91", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isClass", "IsClass92", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isInterface", "IsInterface93", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isValueType", "IsValueType94", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isAbstract", "IsAbstract95", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isSealed", "IsSealed96", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isEnum", "IsEnum97", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isSpecialName", "IsSpecialName98", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isImport", "IsImport99", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isSerializable", "IsSerializable100", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isAnsiClass", "IsAnsiClass101", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isUnicodeClass", "IsUnicodeClass102", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isAutoClass", "IsAutoClass103", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isArray", "IsArray104", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isGenericType", "IsGenericType105", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isGenericTypeDefinition", "IsGenericTypeDefinition106", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isGenericParameter", "IsGenericParameter107", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getGenericParameterPosition", "GenericParameterPosition108", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getContainsGenericParameters", "ContainsGenericParameters109", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetGenericParameterConstraints", "GetGenericParameterConstraints110", "()[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isByRef", "IsByRef111", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isPointer", "IsPointer112", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isPrimitive", "IsPrimitive113", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isCOMObject", "IsCOMObject114", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getHasElementType", "HasElementType115", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isContextful", "IsContextful116", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isMarshalByRef", "IsMarshalByRef117", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "MakeGenericType", "MakeGenericType118", "([Lsystem/Type;)Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetElementType", "GetElementType119", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetGenericArguments", "GetGenericArguments120", "()[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetGenericTypeDefinition", "GetGenericTypeDefinition121", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getUnderlyingSystemType", "UnderlyingSystemType122", "()Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "IsSubclassOf", "IsSubclassOf123", "(Lsystem/Type;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "IsInstanceOfType", "IsInstanceOfType124", "(Lsystem/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "IsAssignableFrom", "IsAssignableFrom125", "(Lsystem/Type;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetTypeArray", "GetTypeArray126", "([Lsystem/Object;)[Lsystem/Type;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "Equals", "Equals127", "(Lsystem/Type;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetInterfaceMap", "GetInterfaceMap128", "(Lsystem/Type;)Lsystem/ValueType;"));
            return methods;
        }
        
        private static global::java.lang.Object.JavaPtr* DeclaringMethod0(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/reflection/MethodBase;
            // ()LSystem/Reflection/MethodBase;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.DeclaringMethod);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetType1(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* typeName, bool throwOnError, bool ignoreCase) {
            // (Ljava/lang/String;ZZ)Lsystem/Type;
            // (LSystem/String;ZZ)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, typeName), throwOnError, ignoreCase));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetType2(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* typeName, bool throwOnError) {
            // (Ljava/lang/String;Z)Lsystem/Type;
            // (LSystem/String;Z)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, typeName), throwOnError));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetType3(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* typeName) {
            // (Ljava/lang/String;)Lsystem/Type;
            // (LSystem/String;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, typeName)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* ReflectionOnlyGetType4(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* typeName, bool throwIfNotFound, bool ignoreCase) {
            // (Ljava/lang/String;ZZ)Lsystem/Type;
            // (LSystem/String;ZZ)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.ReflectionOnlyGetType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, typeName), throwIfNotFound, ignoreCase));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* MakePointerType5(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.MakePointerType());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* StructLayoutAttribute6(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Ljava/lang/Object;
            // ()LSystem/Runtime/InteropServices/StructLayoutAttribute;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.StructLayoutAttribute);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* MakeByRefType7(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.MakeByRefType());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* MakeArrayType8(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.MakeArrayType());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* MakeArrayType9(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, int rank) {
            // (I)Lsystem/Type;
            // (I)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.MakeArrayType(rank));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromProgID10(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* progID) {
            // (Ljava/lang/String;)Lsystem/Type;
            // (LSystem/String;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromProgID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, progID)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromProgID11(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* progID, bool throwOnError) {
            // (Ljava/lang/String;Z)Lsystem/Type;
            // (LSystem/String;Z)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromProgID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, progID), throwOnError));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromProgID12(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* progID, global::java.lang.Object.JavaPtr* server) {
            // (Ljava/lang/String;Ljava/lang/String;)Lsystem/Type;
            // (LSystem/String;LSystem/String;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromProgID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, progID), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, server)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromProgID13(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* progID, global::java.lang.Object.JavaPtr* server, bool throwOnError) {
            // (Ljava/lang/String;Ljava/lang/String;Z)Lsystem/Type;
            // (LSystem/String;LSystem/String;Z)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromProgID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, progID), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, server), throwOnError));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromCLSID14(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* clsid) {
            // (Lsystem/Guid;)Lsystem/Type;
            // (LSystem/Guid;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromCLSID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Guid>(__env, clsid)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromCLSID15(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* clsid, bool throwOnError) {
            // (Lsystem/Guid;Z)Lsystem/Type;
            // (LSystem/Guid;Z)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromCLSID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Guid>(__env, clsid), throwOnError));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromCLSID16(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* clsid, global::java.lang.Object.JavaPtr* server) {
            // (Lsystem/Guid;Ljava/lang/String;)Lsystem/Type;
            // (LSystem/Guid;LSystem/String;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromCLSID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Guid>(__env, clsid), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, server)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromCLSID17(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* clsid, global::java.lang.Object.JavaPtr* server, bool throwOnError) {
            // (Lsystem/Guid;Ljava/lang/String;Z)Lsystem/Type;
            // (LSystem/Guid;LSystem/String;Z)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromCLSID(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Guid>(__env, clsid), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, server), throwOnError));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeCode18(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* type) {
            // (Lsystem/Type;)Lsystem/Enum;
            // (LSystem/Type;)LSystem/TypeCode;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeCode(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, type)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GUID19(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Guid;
            // ()LSystem/Guid;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GUID);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* DefaultBinder20(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz) {
            // ()Ljava/lang/Object;
            // ()LSystem/Reflection/Binder;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.DefaultBinder);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* InvokeMember21(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* invokeAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* target, global::java.lang.Object.JavaPtr* args, global::java.lang.Object.JavaPtr* modifiers, global::java.lang.Object.JavaPtr* culture, global::java.lang.Object.JavaPtr* namedParameters) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Object;[Lsystem/Object;[Lsystem/ValueType;Lsystem/ICloneable;[Lsystem/String;)Lsystem/Object;
            // (LSystem/String;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;LSystem/Object;[LSystem/Object;[LSystem/Reflection/ParameterModifier;LSystem/Globalization/CultureInfo;[LSystem/String;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.InvokeMember(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, invokeAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, target), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, args), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Globalization.CultureInfo>(__env, culture), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String[]>(__env, namedParameters)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* InvokeMember22(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* invokeAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* target, global::java.lang.Object.JavaPtr* args, global::java.lang.Object.JavaPtr* culture) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Object;[Lsystem/Object;Lsystem/ICloneable;)Lsystem/Object;
            // (LSystem/String;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;LSystem/Object;[LSystem/Object;LSystem/Globalization/CultureInfo;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.InvokeMember(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, invokeAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, target), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, args), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Globalization.CultureInfo>(__env, culture)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* InvokeMember23(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* invokeAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* target, global::java.lang.Object.JavaPtr* args) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Object;[Lsystem/Object;)Lsystem/Object;
            // (LSystem/String;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;LSystem/Object;[LSystem/Object;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.InvokeMember(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, invokeAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, target), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, args)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* Assembly24(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/reflection/Assembly;
            // ()LSystem/Reflection/Assembly;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.Assembly);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* TypeHandle25(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/ValueType;
            // ()LSystem/RuntimeTypeHandle;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.TypeHandle);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeHandle26(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* o) {
            // (Lsystem/Object;)Lsystem/ValueType;
            // (LSystem/Object;)LSystem/RuntimeTypeHandle;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeHandle(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, o)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeFromHandle27(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* handle) {
            // (Lsystem/ValueType;)Lsystem/Type;
            // (LSystem/RuntimeTypeHandle;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeFromHandle(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.RuntimeTypeHandle>(__env, handle)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* FullName28(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Ljava/lang/String;
            // ()LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.ConvertString(@__env, real.FullName);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* Namespace29(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Ljava/lang/String;
            // ()LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.ConvertString(@__env, real.Namespace);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* AssemblyQualifiedName30(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Ljava/lang/String;
            // ()LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.ConvertString(@__env, real.AssemblyQualifiedName);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static int GetArrayRank31(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.GetArrayRank();
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(int);
        }
        
        private static global::java.lang.Object.JavaPtr* BaseType32(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.BaseType);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetConstructor33(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* callConvention, global::java.lang.Object.JavaPtr* types, global::java.lang.Object.JavaPtr* modifiers) {
            // (Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Enum;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/ConstructorInfo;
            // (LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;LSystem/Reflection/CallingConventions;[LSystem/Type;[LSystem/Reflection/ParameterModifier;)LSystem/Reflection/ConstructorInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetConstructor(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.CallingConventions>(__env, callConvention), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetConstructor34(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* types, global::java.lang.Object.JavaPtr* modifiers) {
            // (Lsystem/reflection/BindingFlags;Ljava/lang/Object;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/ConstructorInfo;
            // (LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;[LSystem/Type;[LSystem/Reflection/ParameterModifier;)LSystem/Reflection/ConstructorInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetConstructor(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetConstructor35(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* types) {
            // ([Lsystem/Type;)Lsystem/reflection/ConstructorInfo;
            // ([LSystem/Type;)LSystem/Reflection/ConstructorInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetConstructor(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetConstructors36(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/reflection/ConstructorInfo;
            // ()[LSystem/Reflection/ConstructorInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetConstructors());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetConstructors37(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Lsystem/reflection/BindingFlags;)[Lsystem/reflection/ConstructorInfo;
            // (LSystem/Reflection/BindingFlags;)[LSystem/Reflection/ConstructorInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetConstructors(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* TypeInitializer38(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/reflection/ConstructorInfo;
            // ()LSystem/Reflection/ConstructorInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.TypeInitializer);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethod39(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* callConvention, global::java.lang.Object.JavaPtr* types, global::java.lang.Object.JavaPtr* modifiers) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Enum;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/MethodInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;LSystem/Reflection/CallingConventions;[LSystem/Type;[LSystem/Reflection/ParameterModifier;)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethod(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.CallingConventions>(__env, callConvention), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethod40(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* types, global::java.lang.Object.JavaPtr* modifiers) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/MethodInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;[LSystem/Type;[LSystem/Reflection/ParameterModifier;)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethod(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethod41(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* types, global::java.lang.Object.JavaPtr* modifiers) {
            // (Ljava/lang/String;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/MethodInfo;
            // (LSystem/String;[LSystem/Type;[LSystem/Reflection/ParameterModifier;)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethod(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethod42(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* types) {
            // (Ljava/lang/String;[Lsystem/Type;)Lsystem/reflection/MethodInfo;
            // (LSystem/String;[LSystem/Type;)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethod(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethod43(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/MethodInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethod(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethod44(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name) {
            // (Ljava/lang/String;)Lsystem/reflection/MethodInfo;
            // (LSystem/String;)LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethod(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethods45(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/reflection/MethodInfo;
            // ()[LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethods());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMethods46(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MethodInfo;
            // (LSystem/Reflection/BindingFlags;)[LSystem/Reflection/MethodInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMethods(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetField47(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/FieldInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;)LSystem/Reflection/FieldInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetField(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetField48(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name) {
            // (Ljava/lang/String;)Lsystem/reflection/FieldInfo;
            // (LSystem/String;)LSystem/Reflection/FieldInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetField(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetFields49(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/reflection/FieldInfo;
            // ()[LSystem/Reflection/FieldInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetFields());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetFields50(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Lsystem/reflection/BindingFlags;)[Lsystem/reflection/FieldInfo;
            // (LSystem/Reflection/BindingFlags;)[LSystem/Reflection/FieldInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetFields(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetInterface51(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name) {
            // (Ljava/lang/String;)Lsystem/Type;
            // (LSystem/String;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetInterface(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetInterface52(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, bool ignoreCase) {
            // (Ljava/lang/String;Z)Lsystem/Type;
            // (LSystem/String;Z)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetInterface(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), ignoreCase));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetInterfaces53(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/Type;
            // ()[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetInterfaces());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetEvent54(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name) {
            // (Ljava/lang/String;)Lsystem/reflection/MemberInfo;
            // (LSystem/String;)LSystem/Reflection/EventInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetEvent(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetEvent55(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/MemberInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;)LSystem/Reflection/EventInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetEvent(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetEvents56(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/reflection/MemberInfo;
            // ()[LSystem/Reflection/EventInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetEvents());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetEvents57(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MemberInfo;
            // (LSystem/Reflection/BindingFlags;)[LSystem/Reflection/EventInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetEvents(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperty58(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr, global::java.lang.Object.JavaPtr* binder, global::java.lang.Object.JavaPtr* returnType, global::java.lang.Object.JavaPtr* types, global::java.lang.Object.JavaPtr* modifiers) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;Ljava/lang/Object;Lsystem/Type;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/PropertyInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;LSystem/Reflection/Binder;LSystem/Type;[LSystem/Type;[LSystem/Reflection/ParameterModifier;)LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperty(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Binder>(__env, binder), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, returnType), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperty59(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* returnType, global::java.lang.Object.JavaPtr* types, global::java.lang.Object.JavaPtr* modifiers) {
            // (Ljava/lang/String;Lsystem/Type;[Lsystem/Type;[Lsystem/ValueType;)Lsystem/reflection/PropertyInfo;
            // (LSystem/String;LSystem/Type;[LSystem/Type;[LSystem/Reflection/ParameterModifier;)LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperty(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, returnType), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.ParameterModifier[]>(__env, modifiers)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperty60(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/reflection/PropertyInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;)LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperty(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperty61(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* returnType, global::java.lang.Object.JavaPtr* types) {
            // (Ljava/lang/String;Lsystem/Type;[Lsystem/Type;)Lsystem/reflection/PropertyInfo;
            // (LSystem/String;LSystem/Type;[LSystem/Type;)LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperty(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, returnType), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperty62(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* types) {
            // (Ljava/lang/String;[Lsystem/Type;)Lsystem/reflection/PropertyInfo;
            // (LSystem/String;[LSystem/Type;)LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperty(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, types)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperty63(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* returnType) {
            // (Ljava/lang/String;Lsystem/Type;)Lsystem/reflection/PropertyInfo;
            // (LSystem/String;LSystem/Type;)LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperty(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, returnType)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperty64(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name) {
            // (Ljava/lang/String;)Lsystem/reflection/PropertyInfo;
            // (LSystem/String;)LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperty(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperties65(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Lsystem/reflection/BindingFlags;)[Lsystem/reflection/PropertyInfo;
            // (LSystem/Reflection/BindingFlags;)[LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperties(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetProperties66(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/reflection/PropertyInfo;
            // ()[LSystem/Reflection/PropertyInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetProperties());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetNestedTypes67(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/Type;
            // ()[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetNestedTypes());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetNestedTypes68(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Lsystem/reflection/BindingFlags;)[Lsystem/Type;
            // (LSystem/Reflection/BindingFlags;)[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetNestedTypes(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetNestedType69(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name) {
            // (Ljava/lang/String;)Lsystem/Type;
            // (LSystem/String;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetNestedType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetNestedType70(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;)Lsystem/Type;
            // (LSystem/String;LSystem/Reflection/BindingFlags;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetNestedType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMember71(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name) {
            // (Ljava/lang/String;)[Lsystem/reflection/MemberInfo;
            // (LSystem/String;)[LSystem/Reflection/MemberInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMember(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMember72(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Ljava/lang/String;Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MemberInfo;
            // (LSystem/String;LSystem/Reflection/BindingFlags;)[LSystem/Reflection/MemberInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMember(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMember73(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* name, global::java.lang.Object.JavaPtr* type, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Ljava/lang/String;Lsystem/Enum;Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MemberInfo;
            // (LSystem/String;LSystem/Reflection/MemberTypes;LSystem/Reflection/BindingFlags;)[LSystem/Reflection/MemberInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMember(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, name), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.MemberTypes>(__env, type), global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMembers74(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/reflection/MemberInfo;
            // ()[LSystem/Reflection/MemberInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMembers());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetMembers75(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* bindingAttr) {
            // (Lsystem/reflection/BindingFlags;)[Lsystem/reflection/MemberInfo;
            // (LSystem/Reflection/BindingFlags;)[LSystem/Reflection/MemberInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetMembers(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.BindingFlags>(__env, bindingAttr)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetDefaultMembers76(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/reflection/MemberInfo;
            // ()[LSystem/Reflection/MemberInfo;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetDefaultMembers());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static bool IsNested77(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNested;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::java.lang.Object.JavaPtr* Attributes78(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Enum;
            // ()LSystem/Reflection/TypeAttributes;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.Attributes);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GenericParameterAttributes79(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Enum;
            // ()LSystem/Reflection/GenericParameterAttributes;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GenericParameterAttributes);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static bool IsVisible80(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsVisible;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsNotPublic81(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNotPublic;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsPublic82(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsPublic;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsNestedPublic83(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNestedPublic;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsNestedPrivate84(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNestedPrivate;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsNestedFamily85(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNestedFamily;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsNestedAssembly86(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNestedAssembly;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsNestedFamANDAssem87(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNestedFamANDAssem;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsNestedFamORAssem88(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsNestedFamORAssem;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsAutoLayout89(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsAutoLayout;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsLayoutSequential90(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsLayoutSequential;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsExplicitLayout91(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsExplicitLayout;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsClass92(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsClass;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsInterface93(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsInterface;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsValueType94(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsValueType;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsAbstract95(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsAbstract;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsSealed96(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsSealed;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsEnum97(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsEnum;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsSpecialName98(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsSpecialName;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsImport99(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsImport;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsSerializable100(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsSerializable;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsAnsiClass101(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsAnsiClass;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsUnicodeClass102(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsUnicodeClass;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsAutoClass103(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsAutoClass;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsArray104(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsArray;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsGenericType105(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsGenericType;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsGenericTypeDefinition106(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsGenericTypeDefinition;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsGenericParameter107(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsGenericParameter;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static int GenericParameterPosition108(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.GenericParameterPosition;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(int);
        }
        
        private static bool ContainsGenericParameters109(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.ContainsGenericParameters;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::java.lang.Object.JavaPtr* GetGenericParameterConstraints110(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/Type;
            // ()[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetGenericParameterConstraints());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static bool IsByRef111(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsByRef;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsPointer112(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsPointer;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsPrimitive113(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsPrimitive;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsCOMObject114(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsCOMObject;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool HasElementType115(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.HasElementType;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsContextful116(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsContextful;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsMarshalByRef117(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsMarshalByRef;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::java.lang.Object.JavaPtr* MakeGenericType118(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* typeArguments) {
            // ([Lsystem/Type;)Lsystem/Type;
            // ([LSystem/Type;)LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.MakeGenericType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type[]>(__env, typeArguments)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetElementType119(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetElementType());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetGenericArguments120(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()[Lsystem/Type;
            // ()[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetGenericArguments());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* GetGenericTypeDefinition121(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetGenericTypeDefinition());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* UnderlyingSystemType122(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Lsystem/Type;
            // ()LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.UnderlyingSystemType);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static bool IsSubclassOf123(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* c) {
            // (Lsystem/Type;)Z
            // (LSystem/Type;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsSubclassOf(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, c));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsInstanceOfType124(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* o) {
            // (Lsystem/Object;)Z
            // (LSystem/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsInstanceOfType(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, o));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool IsAssignableFrom125(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* c) {
            // (Lsystem/Type;)Z
            // (LSystem/Type;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.IsAssignableFrom(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, c));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::java.lang.Object.JavaPtr* GetTypeArray126(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Class.JavaPtr* @__clazz, global::java.lang.Object.JavaPtr* args) {
            // ([Lsystem/Object;)[Lsystem/Type;
            // ([LSystem/Object;)[LSystem/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::System.Type.GetTypeArray(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object[]>(__env, args)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static bool Equals127(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* o) {
            // (Lsystem/Type;)Z
            // (LSystem/Type;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return real.Equals(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, o));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::java.lang.Object.JavaPtr* GetInterfaceMap128(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* interfaceType) {
            // (Lsystem/Type;)Lsystem/ValueType;
            // (LSystem/Type;)LSystem/Reflection/InterfaceMapping;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::System.Type real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.GetInterfaceMap(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, interfaceType)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJavaProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv env) {
                return new global::System.@__Type(env);
            }
        }
    }
    #endregion
}
