//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace java.lang.reflect {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute()]
    public partial interface TypeVariable : global::java.lang.reflect.Type {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/lang/reflect/GenericDeclaration;")]
        global::java.lang.reflect.GenericDeclaration getGenericDeclaration();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/lang/String;")]
        global::java.lang.String getName();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()[Ljava/lang/reflect/Type;")]
        java.lang.reflect.Type[] getBounds();
    }
    #endregion
    
    #region Component Designer generated code 
    public partial class TypeVariable_ {
        
        public new static global::java.lang.Class _class {
            get {
                return global::java.lang.reflect.@__TypeVariable.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::java.lang.reflect.TypeVariable))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::java.lang.reflect.TypeVariable))]
    internal sealed partial class @__TypeVariable : global::java.lang.Object, global::java.lang.reflect.TypeVariable {
        
        internal static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _getGenericDeclaration0;
        
        internal static global::net.sf.jni4net.jni.MethodId _getName1;
        
        internal static global::net.sf.jni4net.jni.MethodId _getBounds2;
        
        protected @__TypeVariable(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::java.lang.reflect.@__TypeVariable.staticClass = @__class;
            global::java.lang.reflect.@__TypeVariable._getGenericDeclaration0 = @__env.GetMethodID(global::java.lang.reflect.@__TypeVariable.staticClass, "getGenericDeclaration", "()Ljava/lang/reflect/GenericDeclaration;");
            global::java.lang.reflect.@__TypeVariable._getName1 = @__env.GetMethodID(global::java.lang.reflect.@__TypeVariable.staticClass, "getName", "()Ljava/lang/String;");
            global::java.lang.reflect.@__TypeVariable._getBounds2 = @__env.GetMethodID(global::java.lang.reflect.@__TypeVariable.staticClass, "getBounds", "()[Ljava/lang/reflect/Type;");
        }
        
        public global::java.lang.reflect.GenericDeclaration getGenericDeclaration() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            return global::net.sf.jni4net.utils.Convertor.J2C<global::java.lang.reflect.GenericDeclaration>(@__env, @__env.CallObjectMethodPtr(this, global::java.lang.reflect.@__TypeVariable._getGenericDeclaration0));
        }
        
        public global::java.lang.String getName() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            return global::net.sf.jni4net.utils.Convertor.J2C<global::java.lang.String>(@__env, @__env.CallObjectMethodPtr(this, global::java.lang.reflect.@__TypeVariable._getName1));
        }
        
        public java.lang.reflect.Type[] getBounds() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            return global::net.sf.jni4net.utils.Convertor.J2C<java.lang.reflect.Type[]>(@__env, @__env.CallObjectMethodPtr(this, global::java.lang.reflect.@__TypeVariable._getBounds2));
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__TypeVariable);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getGenericDeclaration", "getGenericDeclaration0", "()Ljava/lang/reflect/GenericDeclaration;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getName", "getName1", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getBounds", "getBounds2", "()[Ljava/lang/reflect/Type;"));
            return methods;
        }
        
        private static global::System.IntPtr getGenericDeclaration0(global::System.IntPtr @__envp, global::System.IntPtr @__obj) {
            // ()Ljava/lang/reflect/GenericDeclaration;
            // ()Ljava/lang/reflect/GenericDeclaration;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::java.lang.reflect.TypeVariable @__real = global::net.sf.jni4net.utils.Convertor.J2C<global::java.lang.reflect.TypeVariable>(@__env, @__obj);
            return global::net.sf.jni4net.utils.Convertor.SameC2J<global::java.lang.reflect.GenericDeclaration>(@__env, @__real.getGenericDeclaration());
            }catch (global::System.Exception ex){@__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr getName1(global::System.IntPtr @__envp, global::System.IntPtr @__obj) {
            // ()Ljava/lang/String;
            // ()Ljava/lang/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::java.lang.reflect.TypeVariable @__real = global::net.sf.jni4net.utils.Convertor.J2C<global::java.lang.reflect.TypeVariable>(@__env, @__obj);
            return global::net.sf.jni4net.utils.Convertor.FinalCp2J(@__real.getName());
            }catch (global::System.Exception ex){@__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr getBounds2(global::System.IntPtr @__envp, global::System.IntPtr @__obj) {
            // ()[Ljava/lang/reflect/Type;
            // ()[Ljava/lang/reflect/Type;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::java.lang.reflect.TypeVariable @__real = global::net.sf.jni4net.utils.Convertor.J2C<global::java.lang.reflect.TypeVariable>(@__env, @__obj);
            return global::net.sf.jni4net.utils.Convertor.ArrayC2J<java.lang.reflect.Type[]>(@__env, @__real.getBounds());
            }catch (global::System.Exception ex){@__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJavaProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::java.lang.reflect.@__TypeVariable(@__env);
            }
        }
    }
    #endregion
}
