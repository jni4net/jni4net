//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace java.util {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute()]
    public partial interface Map {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        int hashCode();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object put(global::java.lang.Object par0, global::java.lang.Object par1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void clear();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Z")]
        bool equals(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/util/Set;")]
        global::java.util.Set entrySet();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object get(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/util/Map;)V")]
        void putAll(global::java.util.Map par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        int size();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/util/Collection;")]
        global::java.util.Collection values();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object remove(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Z")]
        bool containsKey(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Z")]
        bool containsValue(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        bool isEmpty();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/util/Set;")]
        global::java.util.Set keySet();
    }
    #endregion
    
    #region Component Designer generated code 
    public unsafe partial class Map_ {
        
        public new static global::java.lang.Class _class {
            get {
                return global::java.util.@__Map.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute()]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::java.util.Map))]
    internal sealed unsafe partial class @__Map : global::java.lang.Object, global::java.util.Map {
        
        internal static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _hashCode0;
        
        internal static global::net.sf.jni4net.jni.MethodId _put1;
        
        internal static global::net.sf.jni4net.jni.MethodId _clear2;
        
        internal static global::net.sf.jni4net.jni.MethodId _equals3;
        
        internal static global::net.sf.jni4net.jni.MethodId _entrySet4;
        
        internal static global::net.sf.jni4net.jni.MethodId _get5;
        
        internal static global::net.sf.jni4net.jni.MethodId _putAll6;
        
        internal static global::net.sf.jni4net.jni.MethodId _size7;
        
        internal static global::net.sf.jni4net.jni.MethodId _values8;
        
        internal static global::net.sf.jni4net.jni.MethodId _remove9;
        
        internal static global::net.sf.jni4net.jni.MethodId _containsKey10;
        
        internal static global::net.sf.jni4net.jni.MethodId _containsValue11;
        
        internal static global::net.sf.jni4net.jni.MethodId _isEmpty12;
        
        internal static global::net.sf.jni4net.jni.MethodId _keySet13;
        
        protected @__Map(global::net.sf.jni4net.jni.JNIEnv env) : 
                base(env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv env, java.lang.Class staticClass) {
            global::java.util.@__Map.staticClass = staticClass;
            global::java.util.@__Map._hashCode0 = env.GetMethodID(global::java.util.@__Map.staticClass, "hashCode", "()I");
            global::java.util.@__Map._put1 = env.GetMethodID(global::java.util.@__Map.staticClass, "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map._clear2 = env.GetMethodID(global::java.util.@__Map.staticClass, "clear", "()V");
            global::java.util.@__Map._equals3 = env.GetMethodID(global::java.util.@__Map.staticClass, "equals", "(Ljava/lang/Object;)Z");
            global::java.util.@__Map._entrySet4 = env.GetMethodID(global::java.util.@__Map.staticClass, "entrySet", "()Ljava/util/Set;");
            global::java.util.@__Map._get5 = env.GetMethodID(global::java.util.@__Map.staticClass, "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map._putAll6 = env.GetMethodID(global::java.util.@__Map.staticClass, "putAll", "(Ljava/util/Map;)V");
            global::java.util.@__Map._size7 = env.GetMethodID(global::java.util.@__Map.staticClass, "size", "()I");
            global::java.util.@__Map._values8 = env.GetMethodID(global::java.util.@__Map.staticClass, "values", "()Ljava/util/Collection;");
            global::java.util.@__Map._remove9 = env.GetMethodID(global::java.util.@__Map.staticClass, "remove", "(Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map._containsKey10 = env.GetMethodID(global::java.util.@__Map.staticClass, "containsKey", "(Ljava/lang/Object;)Z");
            global::java.util.@__Map._containsValue11 = env.GetMethodID(global::java.util.@__Map.staticClass, "containsValue", "(Ljava/lang/Object;)Z");
            global::java.util.@__Map._isEmpty12 = env.GetMethodID(global::java.util.@__Map.staticClass, "isEmpty", "()Z");
            global::java.util.@__Map._keySet13 = env.GetMethodID(global::java.util.@__Map.staticClass, "keySet", "()Ljava/util/Set;");
        }
        
        public int hashCode() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return env.CallIntMethod(this, global::java.util.@__Map._hashCode0);
        }
        
        public global::java.lang.Object put(global::java.lang.Object par0, global::java.lang.Object par1) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.lang.Object>(env.CallObjectMethod(this, global::java.util.@__Map._put1, new global::net.sf.jni4net.jni.Value(par0), new global::net.sf.jni4net.jni.Value(par1)));
        }
        
        public void clear() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            env.CallVoidMethod(this, global::java.util.@__Map._clear2);
        }
        
        public bool equals(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return env.CallBooleanMethod(this, global::java.util.@__Map._equals3, new global::net.sf.jni4net.jni.Value(par0));
        }
        
        public global::java.util.Set entrySet() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.util.Set>(env.CallObjectMethod(this, global::java.util.@__Map._entrySet4));
        }
        
        public global::java.lang.Object get(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.lang.Object>(env.CallObjectMethod(this, global::java.util.@__Map._get5, new global::net.sf.jni4net.jni.Value(par0)));
        }
        
        public void putAll(global::java.util.Map par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            env.CallVoidMethod(this, global::java.util.@__Map._putAll6, new global::net.sf.jni4net.jni.Value(par0));
        }
        
        public int size() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return env.CallIntMethod(this, global::java.util.@__Map._size7);
        }
        
        public global::java.util.Collection values() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.util.Collection>(env.CallObjectMethod(this, global::java.util.@__Map._values8));
        }
        
        public global::java.lang.Object remove(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.lang.Object>(env.CallObjectMethod(this, global::java.util.@__Map._remove9, new global::net.sf.jni4net.jni.Value(par0)));
        }
        
        public bool containsKey(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return env.CallBooleanMethod(this, global::java.util.@__Map._containsKey10, new global::net.sf.jni4net.jni.Value(par0));
        }
        
        public bool containsValue(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return env.CallBooleanMethod(this, global::java.util.@__Map._containsValue11, new global::net.sf.jni4net.jni.Value(par0));
        }
        
        public bool isEmpty() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return env.CallBooleanMethod(this, global::java.util.@__Map._isEmpty12);
        }
        
        public global::java.util.Set keySet() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.util.Set>(env.CallObjectMethod(this, global::java.util.@__Map._keySet13));
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv env, global::java.lang.Class clazz) {
            global::System.Type type = typeof(__Map);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "hashCode", "hashCode0", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "put", "put1", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "clear", "clear2", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "equals", "equals3", "(Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "entrySet", "entrySet4", "()Ljava/util/Set;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "get", "get5", "(Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "putAll", "putAll6", "(Ljava/util/Map;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "size", "size7", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "values", "values8", "()Ljava/util/Collection;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "remove", "remove9", "(Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "containsKey", "containsKey10", "(Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "containsValue", "containsValue11", "(Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "isEmpty", "isEmpty12", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "keySet", "keySet13", "()Ljava/util/Set;"));
            return methods;
        }
        
        private static int hashCode0(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return real.hashCode();
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(int);
        }
        
        private static global::java.lang.Object.JavaPtr* put1(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0, global::java.lang.Object.JavaPtr* par1) {
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.put(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Object>(__env, par0), global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Object>(__env, par1)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static void clear2(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            real.clear();
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static bool equals3(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/lang/Object;)Z
            // (Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return real.equals(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Object>(__env, par0));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::java.lang.Object.JavaPtr* entrySet4(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Ljava/util/Set;
            // ()Ljava/util/Set;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.entrySet());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* get5(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.get(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Object>(__env, par0)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static void putAll6(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/util/Map;)V
            // (Ljava/util/Map;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            real.putAll(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, par0));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static int size7(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return real.size();
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(int);
        }
        
        private static global::java.lang.Object.JavaPtr* values8(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Ljava/util/Collection;
            // ()Ljava/util/Collection;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.values());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* remove9(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.remove(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Object>(__env, par0)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static bool containsKey10(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/lang/Object;)Z
            // (Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return real.containsKey(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Object>(__env, par0));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool containsValue11(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/lang/Object;)Z
            // (Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return real.containsValue(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Object>(__env, par0));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static bool isEmpty12(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return real.isEmpty();
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static global::java.lang.Object.JavaPtr* keySet13(global::System.IntPtr @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()Ljava/util/Set;
            // ()Ljava/util/Set;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::java.util.Map real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::java.util.Map>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.keySet());
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJavaProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv env) {
                return new global::java.util.@__Map(env);
            }
        }
    }
    #endregion
}
