//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.sf.jni4net {
    
    
    #region Component Designer generated code 
    public partial class Bridge_ {
        
        public new static global::java.lang.Class _class {
            get {
                return global::net.sf.jni4net.@__Bridge.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute()]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::net.sf.jni4net.Bridge))]
    internal sealed partial class @__Bridge : global::java.lang.Object {
        
        internal static global::java.lang.Class staticClass;
        
        protected @__Bridge(global::net.sf.jni4net.jni.JNIEnv env) : 
                base(env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv env, java.lang.Class staticClass) {
            global::net.sf.jni4net.@__Bridge.staticClass = staticClass;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv env, global::java.lang.Class clazz) {
            global::System.Type type = typeof(__Bridge);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getVerbose", "Verbose0", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "setVerbose", "Verbose1", "(Z)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getDebug", "Debug2", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "setDebug", "Debug3", "(Z)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "getBindNative", "BindNative4", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "setBindNative", "BindNative5", "(Z)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "LoadAndRegisterAssembly", "LoadAndRegisterAssembly6", "(Ljava/lang/String;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "RegisterAssembly", "RegisterAssembly7", "(Lsystem/reflection/Assembly;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "ToCLR", "ToCLR8", "(Ljava/lang/Object;)Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "ToJVM", "ToJVM9", "(Lsystem/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "TypeToKnownClass", "TypeToKnownClass10", "(Lsystem/Type;)Ljava/lang/Class;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "ClrSignature", "ClrSignature11", "(Lsystem/Type;)Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "GetSignature", "GetSignature12", "(Ljava/lang/String;)Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "JavaSignature", "JavaSignature13", "(Ljava/lang/Class;)Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "disposeClrHandle", "disposeClrHandle14", "(I)V"));
            return methods;
        }
        
        private static bool Verbose0(global::System.IntPtr @__envi, global::System.IntPtr @__clazz) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.Bridge.Verbose;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static void Verbose1(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, bool value) {
            // (Z)V
            // (Z)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::net.sf.jni4net.Bridge.Verbose = value;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static bool Debug2(global::System.IntPtr @__envi, global::System.IntPtr @__clazz) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.Bridge.Debug;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static void Debug3(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, bool value) {
            // (Z)V
            // (Z)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::net.sf.jni4net.Bridge.Debug = value;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static bool BindNative4(global::System.IntPtr @__envi, global::System.IntPtr @__clazz) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.Bridge.BindNative;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(bool);
        }
        
        private static void BindNative5(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, bool value) {
            // (Z)V
            // (Z)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::net.sf.jni4net.Bridge.BindNative = value;
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static void LoadAndRegisterAssembly6(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr assemblyPath) {
            // (Ljava/lang/String;)V
            // (LSystem/String;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::net.sf.jni4net.Bridge.LoadAndRegisterAssembly(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, assemblyPath));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static void RegisterAssembly7(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr assembly) {
            // (Lsystem/reflection/Assembly;)V
            // (LSystem/Reflection/Assembly;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::net.sf.jni4net.Bridge.RegisterAssembly(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Reflection.Assembly>(__env, assembly));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static global::System.IntPtr ToCLR8(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr obj) {
            // (Ljava/lang/Object;)Lsystem/Object;
            // (Lnet/sf/jni4net/jni/IJavaProxy;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::net.sf.jni4net.Bridge.ToCLR(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::net.sf.jni4net.jni.IJavaProxy>(__env, obj)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr ToJVM9(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr obj) {
            // (Lsystem/Object;)Ljava/lang/Object;
            // (LSystem/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::net.sf.jni4net.Bridge.ToJVM(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, obj)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr TypeToKnownClass10(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr real) {
            // (Lsystem/Type;)Ljava/lang/Class;
            // (LSystem/Type;)Ljava/lang/Class;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, global::net.sf.jni4net.Bridge.TypeToKnownClass(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, real)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr ClrSignature11(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr type) {
            // (Lsystem/Type;)Ljava/lang/String;
            // (LSystem/Type;)LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.ConvertString(@__env, global::net.sf.jni4net.Bridge.ClrSignature(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Type>(__env, type)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr GetSignature12(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr typeName) {
            // (Ljava/lang/String;)Ljava/lang/String;
            // (LSystem/String;)LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.ConvertString(@__env, global::net.sf.jni4net.Bridge.GetSignature(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.String>(__env, typeName)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static global::System.IntPtr JavaSignature13(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, global::System.IntPtr clazz) {
            // (Ljava/lang/Class;)Ljava/lang/String;
            // (Ljava/lang/Class;)LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            return global::net.sf.jni4net.utils.ClrProxiesMap.ConvertString(@__env, global::net.sf.jni4net.Bridge.JavaSignature(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.lang.Class>(__env, clazz)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static void disposeClrHandle14(global::System.IntPtr @__envi, global::System.IntPtr @__clazz, int clrHandle) {
            // (I)V
            // (I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envi);
            try {
            global::net.sf.jni4net.Bridge.disposeClrHandle(clrHandle);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJavaProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv env) {
                return new global::net.sf.jni4net.@__Bridge(env);
            }
        }
    }
    #endregion
}
