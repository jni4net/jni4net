//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.sf.jni4net.jni {
    
    
    #region Component Designer generated code 
    public partial class IJvmProxy_ {
        
        public new static global::java.lang.Class _class {
            get {
                return global::net.sf.jni4net.jni.__IJvmProxy.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::net.sf.jni4net.jni.IJvmProxy))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::net.sf.jni4net.jni.IJvmProxy))]
    internal sealed partial class __IJvmProxy : global::java.lang.Object, global::net.sf.jni4net.jni.IJvmProxy {
        
        internal static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _Native0;
        
        internal static global::net.sf.jni4net.jni.MethodId _Native1;
        
        internal static global::net.sf.jni4net.jni.MethodId _Init2;
        
        internal static global::net.sf.jni4net.jni.MethodId _GetClass3;
        
        protected __IJvmProxy(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        public global::System.IntPtr Native {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
                return ((global::System.IntPtr)(@__env.CallLongMethod(this, global::net.sf.jni4net.jni.__IJvmProxy._Native0)));
            }
            set {
                global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
                @__env.CallVoidMethod(this, global::net.sf.jni4net.jni.__IJvmProxy._Native1, global::net.sf.jni4net.utils.Convertor.ParPrimC2J(value));
            }
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::net.sf.jni4net.jni.__IJvmProxy.staticClass = @__class;
            global::net.sf.jni4net.jni.__IJvmProxy._Native0 = @__env.GetMethodID(global::net.sf.jni4net.jni.__IJvmProxy.staticClass, "getNative", "()J");
            global::net.sf.jni4net.jni.__IJvmProxy._Native1 = @__env.GetMethodID(global::net.sf.jni4net.jni.__IJvmProxy.staticClass, "setNative", "(J)V");
            global::net.sf.jni4net.jni.__IJvmProxy._Init2 = @__env.GetMethodID(global::net.sf.jni4net.jni.__IJvmProxy.staticClass, "Init", "(Lsystem/Object;JLjava/lang/Class;)V");
            global::net.sf.jni4net.jni.__IJvmProxy._GetClass3 = @__env.GetMethodID(global::net.sf.jni4net.jni.__IJvmProxy.staticClass, "GetClass", "()Ljava/lang/Class;");
        }
        
        public void Init(global::net.sf.jni4net.jni.JNIEnv env, global::System.IntPtr obj, global::java.lang.Class clazz) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            @__env.CallVoidMethod(this, global::net.sf.jni4net.jni.__IJvmProxy._Init2, global::net.sf.jni4net.utils.Convertor.ParStrongC2Jp<global::net.sf.jni4net.jni.JNIEnv>(@__env, env), global::net.sf.jni4net.utils.Convertor.ParPrimC2J(obj), global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(clazz));
        }
        
        public global::java.lang.Class GetClass() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            return global::net.sf.jni4net.utils.Convertor.StrongJ2CpClass(@__env, @__env.CallObjectMethodPtr(this, global::net.sf.jni4net.jni.__IJvmProxy._GetClass3));
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__IJvmProxy);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getNative", "Native0", "()J"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setNative", "Native1", "(J)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Init", "Init2", "(Lsystem/Object;JLjava/lang/Class;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "GetClass", "GetClass3", "()Ljava/lang/Class;"));
            return methods;
        }
        
        private static global::System.IntPtr Native0(global::System.IntPtr @__envp, global::System.IntPtr @__obj) {
            // ()J
            // ()LSystem/IntPtr;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::net.sf.jni4net.jni.IJvmProxy @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::net.sf.jni4net.jni.IJvmProxy>(@__env, @__obj);
            return ((global::System.IntPtr)(@__real.Native));
            }catch (global::System.Exception ex){@__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        private static void Native1(global::System.IntPtr @__envp, global::System.IntPtr @__obj, global::System.IntPtr value) {
            // (J)V
            // (LSystem/IntPtr;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::net.sf.jni4net.jni.IJvmProxy @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::net.sf.jni4net.jni.IJvmProxy>(@__env, @__obj);
            @__real.Native = value;
            }catch (global::System.Exception ex){@__env.ThrowExisting(ex);}
        }
        
        private static void Init2(global::System.IntPtr @__envp, global::System.IntPtr @__obj, global::System.IntPtr env, global::System.IntPtr obj, global::System.IntPtr clazz) {
            // (Lsystem/Object;JLjava/lang/Class;)V
            // (Lnet/sf/jni4net/jni/JNIEnv;LSystem/IntPtr;Ljava/lang/Class;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::net.sf.jni4net.jni.IJvmProxy @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::net.sf.jni4net.jni.IJvmProxy>(@__env, @__obj);
            @__real.Init(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::net.sf.jni4net.jni.JNIEnv>(@__env, env), obj, global::net.sf.jni4net.utils.Convertor.StrongJ2CpClass(@__env, clazz));
            }catch (global::System.Exception ex){@__env.ThrowExisting(ex);}
        }
        
        private static global::System.IntPtr GetClass3(global::System.IntPtr @__envp, global::System.IntPtr @__obj) {
            // ()Ljava/lang/Class;
            // ()Ljava/lang/Class;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::net.sf.jni4net.jni.IJvmProxy @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::net.sf.jni4net.jni.IJvmProxy>(@__env, @__obj);
            return global::net.sf.jni4net.utils.Convertor.StrongCp2J(@__real.GetClass());
            }catch (global::System.Exception ex){@__env.ThrowExisting(ex);}
            return default(global::System.IntPtr);
        }
        
        internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::net.sf.jni4net.jni.__IJvmProxy(@__env);
            }
        }
    }
    #endregion
}
