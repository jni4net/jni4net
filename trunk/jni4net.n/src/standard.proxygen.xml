<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (C) 2009 by Pavel Savara
This file is part of jni4net library - bridge between Java and .NET
http://jni4net.sourceforge.net/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as 
published by the Free Software Foundation, either version 3 
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<jni4net-proxygen xmlns="http://jni4net.sf.net/0.1.0.0/toolConfig.xsd">
  <TargetDirJvm>../jni4net.j/src/main/java</TargetDirJvm>
  <TargetDirClr>target/build-sources/generated-sources</TargetDirClr>
  <ClassPath>../jni4net.j/target/classes</ClassPath>
  <!-- 
  <Verbose>true</Verbose>
  -->


  <!-- basics -->
  <JavaClass TypeName="java.lang.Object"/>
  <JavaClass TypeName="java.lang.Class"/>
  <JavaClass TypeName="java.lang.ClassLoader"/>
  <JavaClass TypeName="java.lang.String"/>
  <JavaClass TypeName="java.lang.StringBuffer"/>
  <JavaClass TypeName="java.lang.StringBuilder"/>
  <JavaClass TypeName="java.lang.Runnable"/>

  <!-- collections -->
  <JavaClass TypeName="java.util.Dictionary"/>
  <JavaClass TypeName="java.util.Hashtable"/>
  <JavaClass TypeName="java.util.List"/>
  <JavaClass TypeName="java.util.Map"/>
  <JavaClass TypeName="java.util.Set"/>
  <JavaClass TypeName="java.util.Properties"/>
  <JavaClass TypeName="java.util.Iterator"/>
  <JavaClass TypeName="java.util.Enumeration"/>

  <!-- io,nio,net -->
  <JavaClass TypeName="java.io.InputStream"/>
  <JavaClass TypeName="java.io.OutputStream"/>
  <JavaClass TypeName="java.io.PrintStream"/>
  <JavaClass TypeName="java.io.File"/>
  <JavaClass TypeName="java.net.URL"/>
  <JavaClass TypeName="java.nio.Buffer"/>
  <JavaClass TypeName="java.nio.ByteBuffer"/>
  <JavaClass TypeName="java.lang.System"/>

  <!-- primitive types -->
  <JavaClass TypeName="java.lang.Boolean"/>
  <JavaClass TypeName="java.lang.Byte"/>
  <JavaClass TypeName="java.lang.Double"/>
  <JavaClass TypeName="java.lang.Float"/>
  <JavaClass TypeName="java.lang.Integer"/>
  <JavaClass TypeName="java.lang.Long"/>
  <JavaClass TypeName="java.lang.Short"/>
  <JavaClass TypeName="java.lang.Character"/>

  <!-- exceptions -->
  <JavaClass TypeName="java.lang.Exception"/>
  <JavaClass TypeName="java.lang.LinkageError"/>
  <JavaClass TypeName="java.lang.NoClassDefFoundError"/>
  <JavaClass TypeName="java.lang.NoSuchFieldException"/>
  <JavaClass TypeName="java.lang.NoSuchMethodException"/>
  <JavaClass TypeName="java.lang.RuntimeException"/>
  <JavaClass TypeName="java.lang.StackTraceElement"/>
  <JavaClass TypeName="java.lang.ClassNotFoundException"/>

  <!-- reflection -->
  <JavaClass TypeName="java.lang.reflect.Constructor"/>
  <JavaClass TypeName="java.lang.reflect.Field"/>
  <JavaClass TypeName="java.lang.reflect.Method"/>
  <JavaClass TypeName="java.lang.reflect.Member"/>
  <JavaClass TypeName="java.lang.reflect.Type"/>
  <JavaClass TypeName="java.lang.reflect.TypeVariable"/>
  <JavaClass TypeName="java.lang.reflect.WildcardType"/>
  <JavaClass TypeName="java.lang.reflect.ParameterizedType"/>
  <JavaClass TypeName="java.lang.reflect.Modifier"/>
  <JavaClass TypeName="java.lang.reflect.GenericArrayType"/>
  <JavaClass TypeName="java.lang.annotation.Annotation"/>

  <!-- bridge -->
  <JavaClass TypeName="net.sf.jni4net.inj.IClrProxy" SyncInterface="true"/>

  <SkipJavaMethod ClassName="java.io.File" MethodName="listFiles" Signature="(Ljava/io/FileFilter;)[Ljava/io/File;"/>
  <SkipJavaMethod ClassName="java.lang.reflect.Constructor" MethodName="getParameterAnnotations" Signature="()[[Ljava/lang/annotation/Annotation;"/>
  <SkipJavaMethod ClassName="java.lang.reflect.Method" MethodName="getParameterAnnotations" Signature="()[[Ljava/lang/annotation/Annotation;"/>
  <SkipJavaMethod ClassName="java.util.Hashtable" MethodName="clone" Signature="()Ljava/lang/Object;"/>

</jni4net-proxygen>
