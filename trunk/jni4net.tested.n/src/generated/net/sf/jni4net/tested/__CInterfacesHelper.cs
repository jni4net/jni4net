//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.sf.jni4net.tested {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::net.sf.jni4net.tested.CInterfacesHelper))]
    internal sealed unsafe class @__CInterfacesHelper {
        
        private static global::java.lang.Object.JavaPtr* createCWithJavaInterface0(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* envi, global::java.lang.Object.JavaPtr* obj, int par0) {
            // (I)Lnet/sf/jni4net/tested/CWithJavaInterface;
            global::net.sf.jni4net.jni.JNIEnv env = (*envi).Wrap();
            try {
            global::net.sf.jni4net.tested.CInterfacesHelper real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.jni4net.tested.CInterfacesHelper>(env, obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(env, real.createCWithJavaInterface(par0));
            }catch (global::System.Exception ex){env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* CWithJavaInterfaceUnreg1(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* envi, global::java.lang.Object.JavaPtr* obj, int par0) {
            // (I)Lsystem/Object;
            global::net.sf.jni4net.jni.JNIEnv env = (*envi).Wrap();
            try {
            global::net.sf.jni4net.tested.CInterfacesHelper real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.jni4net.tested.CInterfacesHelper>(env, obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(env, real.CWithJavaInterfaceUnreg(par0));
            }catch (global::System.Exception ex){env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static void @__ctorCInterfacesHelper2(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* envi, global::java.lang.Object.JavaPtr* clazz, global::java.lang.Object.JavaPtr* obj) {
            // (Ljava/lang/Object;)V
            global::net.sf.jni4net.jni.JNIEnv env = (*envi).Wrap();
            try {
            global::net.sf.jni4net.tested.CInterfacesHelper real = new global::net.sf.jni4net.tested.CInterfacesHelper();
            global::net.sf.jni4net.utils.ClrProxiesMap.InitProxy(env, obj, real);
            }catch (global::System.Exception ex){env.ThrowExisting(ex);}
        }
        
        private static global::System.Collections.Generic.List<net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv env, global::java.lang.Class clazz) {
            global::System.Type type = typeof(__CInterfacesHelper);
            global::System.Collections.Generic.List<net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "createCWithJavaInterface", "createCWithJavaInterface0", "(I)Lnet/sf/jni4net/tested/CWithJavaInterface;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "CWithJavaInterfaceUnreg", "CWithJavaInterfaceUnreg1", "(I)Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "__ctorCInterfacesHelper2", "__ctorCInterfacesHelper2", "(Ljava/lang/Object;)V"));
            return methods;
        }
    }
    #endregion
}
