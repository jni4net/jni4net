//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace org.drools.runtime.rule {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaClassAttribute()]
    [global::System.SerializableAttribute()]
    public partial class ConsequenceException : global::java.lang.RuntimeException {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _getRule0;
        
        internal static global::net.sf.jni4net.jni.MethodId @__ctorConsequenceException1;
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Throwable;Lorg/drools/definition/rule/Rule;)V")]
        public ConsequenceException(global::java.lang.Throwable par0, global::org.drools.definition.rule.Rule par1) : 
                base(((global::net.sf.jni4net.jni.JNIEnv)(null))) {
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            @__env.NewObject(global::org.drools.runtime.rule.ConsequenceException.staticClass, global::org.drools.runtime.rule.ConsequenceException.@__ctorConsequenceException1, this, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Throwable>(@__env, par0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::org.drools.definition.rule.Rule>(@__env, par1));
            }
        }
        
        protected ConsequenceException(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        protected ConsequenceException(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
        }
        
        public static global::java.lang.Class _class {
            get {
                return global::org.drools.runtime.rule.ConsequenceException.staticClass;
            }
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::org.drools.runtime.rule.ConsequenceException.staticClass = @__class;
            global::org.drools.runtime.rule.ConsequenceException._getRule0 = @__env.GetMethodID(global::org.drools.runtime.rule.ConsequenceException.staticClass, "getRule", "()Lorg/drools/definition/rule/Rule;");
            global::org.drools.runtime.rule.ConsequenceException.@__ctorConsequenceException1 = @__env.GetMethodID(global::org.drools.runtime.rule.ConsequenceException.staticClass, "<init>", "(Ljava/lang/Throwable;Lorg/drools/definition/rule/Rule;)V");
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Lorg/drools/definition/rule/Rule;")]
        public virtual global::org.drools.definition.rule.Rule getRule() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.definition.rule.Rule>(@__env, @__env.CallObjectMethodPtr(this, global::org.drools.runtime.rule.ConsequenceException._getRule0));
            }
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::org.drools.runtime.rule.ConsequenceException(@__env);
            }
        }
    }
    #endregion
}
