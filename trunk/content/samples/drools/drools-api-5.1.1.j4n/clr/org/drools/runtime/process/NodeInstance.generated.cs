//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace org.drools.runtime.process {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute()]
    public partial interface NodeInstance {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()J")]
        long getId();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Lorg/drools/runtime/process/WorkflowProcessInstance;")]
        global::org.drools.runtime.process.WorkflowProcessInstance getProcessInstance();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()J")]
        long getNodeId();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/lang/String;")]
        global::java.lang.String getNodeName();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Lorg/drools/runtime/process/NodeInstanceContainer;")]
        global::org.drools.runtime.process.NodeInstanceContainer getNodeInstanceContainer();
    }
    #endregion
    
    #region Component Designer generated code 
    public partial class NodeInstance_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::org.drools.runtime.process.@__NodeInstance.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::org.drools.runtime.process.NodeInstance), typeof(global::org.drools.runtime.process.NodeInstance_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::org.drools.runtime.process.NodeInstance), typeof(global::org.drools.runtime.process.NodeInstance_))]
    internal sealed partial class @__NodeInstance : global::java.lang.Object, global::org.drools.runtime.process.NodeInstance {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _getId0;
        
        internal static global::net.sf.jni4net.jni.MethodId _getProcessInstance1;
        
        internal static global::net.sf.jni4net.jni.MethodId _getNodeId2;
        
        internal static global::net.sf.jni4net.jni.MethodId _getNodeName3;
        
        internal static global::net.sf.jni4net.jni.MethodId _getNodeInstanceContainer4;
        
        private @__NodeInstance(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::org.drools.runtime.process.@__NodeInstance.staticClass = @__class;
            global::org.drools.runtime.process.@__NodeInstance._getId0 = @__env.GetMethodID(global::org.drools.runtime.process.@__NodeInstance.staticClass, "getId", "()J");
            global::org.drools.runtime.process.@__NodeInstance._getProcessInstance1 = @__env.GetMethodID(global::org.drools.runtime.process.@__NodeInstance.staticClass, "getProcessInstance", "()Lorg/drools/runtime/process/WorkflowProcessInstance;");
            global::org.drools.runtime.process.@__NodeInstance._getNodeId2 = @__env.GetMethodID(global::org.drools.runtime.process.@__NodeInstance.staticClass, "getNodeId", "()J");
            global::org.drools.runtime.process.@__NodeInstance._getNodeName3 = @__env.GetMethodID(global::org.drools.runtime.process.@__NodeInstance.staticClass, "getNodeName", "()Ljava/lang/String;");
            global::org.drools.runtime.process.@__NodeInstance._getNodeInstanceContainer4 = @__env.GetMethodID(global::org.drools.runtime.process.@__NodeInstance.staticClass, "getNodeInstanceContainer", "()Lorg/drools/runtime/process/NodeInstanceContainer;");
        }
        
        public long getId() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((long)(@__env.CallLongMethod(this, global::org.drools.runtime.process.@__NodeInstance._getId0)));
            }
        }
        
        public global::org.drools.runtime.process.WorkflowProcessInstance getProcessInstance() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.runtime.process.WorkflowProcessInstance>(@__env, @__env.CallObjectMethodPtr(this, global::org.drools.runtime.process.@__NodeInstance._getProcessInstance1));
            }
        }
        
        public long getNodeId() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((long)(@__env.CallLongMethod(this, global::org.drools.runtime.process.@__NodeInstance._getNodeId2)));
            }
        }
        
        public global::java.lang.String getNodeName() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.CallObjectMethodPtr(this, global::org.drools.runtime.process.@__NodeInstance._getNodeName3));
            }
        }
        
        public global::org.drools.runtime.process.NodeInstanceContainer getNodeInstanceContainer() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.runtime.process.NodeInstanceContainer>(@__env, @__env.CallObjectMethodPtr(this, global::org.drools.runtime.process.@__NodeInstance._getNodeInstanceContainer4));
            }
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__NodeInstance);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getId", "getId0", "()J"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getProcessInstance", "getProcessInstance1", "()Lorg/drools/runtime/process/WorkflowProcessInstance;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getNodeId", "getNodeId2", "()J"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getNodeName", "getNodeName3", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getNodeInstanceContainer", "getNodeInstanceContainer4", "()Lorg/drools/runtime/process/NodeInstanceContainer;"));
            return methods;
        }
        
        private static long getId0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()J
            // ()J
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            long @__return = default(long);
            try {
            global::org.drools.runtime.process.NodeInstance @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.runtime.process.NodeInstance>(@__env, @__obj);
            @__return = ((long)(@__real.getId()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getProcessInstance1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lorg/drools/runtime/process/WorkflowProcessInstance;
            // ()Lorg/drools/runtime/process/WorkflowProcessInstance;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::org.drools.runtime.process.NodeInstance @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.runtime.process.NodeInstance>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::org.drools.runtime.process.WorkflowProcessInstance>(@__env, @__real.getProcessInstance());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static long getNodeId2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()J
            // ()J
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            long @__return = default(long);
            try {
            global::org.drools.runtime.process.NodeInstance @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.runtime.process.NodeInstance>(@__env, @__obj);
            @__return = ((long)(@__real.getNodeId()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getNodeName3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/lang/String;
            // ()Ljava/lang/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::org.drools.runtime.process.NodeInstance @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.runtime.process.NodeInstance>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongCp2J(@__real.getNodeName());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getNodeInstanceContainer4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lorg/drools/runtime/process/NodeInstanceContainer;
            // ()Lorg/drools/runtime/process/NodeInstanceContainer;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::org.drools.runtime.process.NodeInstance @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::org.drools.runtime.process.NodeInstance>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::org.drools.runtime.process.NodeInstanceContainer>(@__env, @__real.getNodeInstanceContainer());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::org.drools.runtime.process.@__NodeInstance(@__env);
            }
        }
    }
    #endregion
}
